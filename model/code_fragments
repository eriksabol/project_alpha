
        // jQuery.sap.require("jquery.sap.storage");
        // var oStorage = jQuery.sap.storage(jQuery.sap.storage.Type.local);

        // console.log("oStorage: " + oStorage);

        // console.log(oStorage.isSupported());

        // var mockLogonToken = "dcplnx23099339:6400@{3&2=507714,U3&2v=dcplnx23099339:6400,UP&66=60,U3&68=secEnterprise:Administrator,UP&S9=12,U3&qe=100,U3&vz=erjMxF8o2a9vxFPOxnl.qIvOB.yeJW8wHh9JAOUwts0,UP}";

        // console.log(oStorage.put("logonToken_dcplnx23099339:6400", mockLogonToken));



                    if (jQuery.sap.storage(jQuery.sap.storage.Type.local).put("logonToken", "teststring")) {

                console.log("Logon token savend to Local storage.")

            } else {

                console.log("Logon token could not be saved to local Storage");

            }





                function isThereOrphanedToken() {

        var localStorage = jQuery.sap.storage(jQuery.sap.storage.Type.local);

        if(localStorage.get("logonTokens") !== null) {

            return true;

        }

        else {

            return false;

        }



        // if (localStorage.isSupported()) {

        //     if(jQuery.sap.storage(jQuery.sap.storage.Type.local).get("logonTokens") !== null) {

        //         var logonToken = JSON.parse(jQuery.sap.storage(jQuery.sap.storage.Type.local).get("logonTokens"));

        //         console.log(logonToken);

        //         sap.m.MessageBox.warning("Your local storage contains the following logon tokens" + logonToken, {title: "Warning", actions: sap.m.MessageBox.Action.YES,
            
        //             onClose: function(oAction) {

        //                 console.log(oAction);

        //                 if(oAction === sap.m.MessageBox.Action.YES) {

        //                     alert("yes");

        //                 }

        //             }
                                   
        //     });

        //     }

        //     // Pride kod, ktory checkne ci tam uz je nejaky logon token a zobrazi hlasku, ci chce vsetky tokeny zmazat.
        //     // Zmazanie bude asi JSON request na logoff, ak sa vrati error tak to zmaze. Ak sa vrati uspesne prihlasenie, tak
        //     // tu session odhlasi.

        // } else {

        //     sap.m.MessageBox.error("Your browse does not support local storage functionality. You are not able to use this application.");

        //     this.getView().byId("input-wacs").setEnabled(false);
        //     this.getView().byId("input-username").setEnabled(false);
        //     this.getView().byId("input-password").setEnabled(false);

        //     // Is already disabled in view:
        //     //this.getView().byId("input-authentication").setEnabled(false);

        // }


var myJSON={"logonToken": "dcplnx23099339:6400@{3&2=508365,U3&2v=dcplnx23099339:6400,UP&66=60,U3&68=secEnterprise:Administrator,UP&S9=12,U3&qe=100,U3&vz=MXgVOkJ1lYL.Drlg79gXdneX6z.I2SQ81J695w7IDTE,UP}"
}
var tokenModel = new sap.ui.model.json.JSONModel();
sap.ui.getCore().setModel(tokenModel, "tokenModel");
sap.ui.getCore().getModel("tokenModel").setJSON(JSON.stringify(myJSON));

{
	"query": "select SI_NAME, SI_ID, SI_CUID, SI_PID, SI_DISABLED, SI_SIA_HOSTNAME, SI_AUTOBOOT, SI_STATUSINFO, SI_REQUIRES_RESTART, SI_CURRENT_COMMAND_LINE, SI_METRICS, SI_EXPECTED_RUN_STATE, SI_SERVER_WAITING_FOR_RESOURCES from ci_systemobjects where si_kind='Server'"
}


    // function loginRequest(URL, inputObject, callbackFunction) {

    //     // TODO: here we should somehow check whether there is an existing logon token in sap storage

    //     // Request for login to BI 4.2 via REST
    //     $.ajax({
    //         url: URL + "/logon/long",
    //         method: "POST",
    //         contentType: "application/json",
    //         data: JSON.stringify(inputObject),
    //         dataType: "json",
    //         success: function (data, textStatus, jqXHRobject) {

    //             console.log("It's success");
    //             console.log(jqXHRobject);

    //             if (callbackFunction != null) {

    //                 // Aj jqXHRobject obsahuje returned data (logon token)
    //                 callbackFunction(jqXHRobject);

    //             }

    //         },
    //         error: function (jqXHRobject, textStatus, errorThrown) { //Object, String, String

    //             console.log("It's fail.");

    //             if (callbackFunction != null) {

    //                 // Teraz to bude iba objekt s chybami alebo undefined
    //                 callbackFunction(jqXHRobject);

    //             }

    //         }

    //     });
    // }

    // function processTheOutput(result) {

    //     console.log(result);

    //     // Check returned object and process further

    //     // TODO rework loop for checking the output into case statement?

    //     if (result.status === 0) {

    //         sap.m.MessageBox.error("Communication error (status: 0). Please check if you have connectivity to WACS server.");

    //     } else if (result.status === 200 && typeof result.responseJSON !== "undefined") {

    //         // Saving logon token to Core globally as JSONModel
    //         sap.ui.getCore().getModel("tokenModel").setJSON(JSON.stringify(result.responseJSON));

    //         // Navigating to dashboard view after successfull login
    //         that.getRouter().navTo("Next", {}, true);

    //         MessageToast.show("You were logged on to BI4 environment.");

    //     } else if (result.status !== 200 && typeof result.responseJSON !== "undefined" && result.responseText !== "{}") {

    //         sap.m.MessageBox.error(result.responseJSON.message, {
    //             title: result.status + " " + result.statusText
    //         });

    //     } else {

    //         sap.m.MessageBox.error(result.statusText, {
    //             title: result.status
    //         });

    //     }

    // }

    // function test() {

    //     console.log("This is a test outside function.")

    //     console.log("Has model? " + sap.ui.getCore().hasModel());
    //     console.log("This is the model: " + sap.ui.getCore().getModel("tokenModel"));

    //     var coreModel = sap.ui.getCore().getModel("tokenModel");

    //     coreModel.loadData("model/logonToken.json");

    //     console.log("This is the model: " + coreModel);

    //     console.log(coreModel);

    //     console.log(that.getRouter());

    //     const myRequest = new Request('http://localhost:6405/biprws/logon/long');


    // }





    var myPromise = new Promise(function (resolve, reject) {

                $.ajax({
                    url: "http://localhost:6405/biprws/logoff",
                    method: "POST",
                    contentType: "application/json",
                    headers: {
            "X-SAP-LogonToken": sap.ui.getCore().getModel("tokenModel").getProperty("/logonToken")
            },
                    data: JSON.stringify(),
                    dataType: "json"

                }).done(resolve).fail(reject);

            });